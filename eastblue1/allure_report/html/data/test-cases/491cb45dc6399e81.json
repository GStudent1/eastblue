{
  "uid" : "491cb45dc6399e81",
  "name" : "test_season_giftbag_group_comparison_false",
  "fullName" : "test_case.test_season_monitoring.test_season.TestSeason#test_season_giftbag_group_comparison_false",
  "historyId" : "893b2033df940d2cb2a261cd92910c68",
  "time" : {
    "start" : 1683269094646,
    "stop" : 1683269103415,
    "duration" : 8769
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: [data_second_query_length] Expected <221> to be less than or equal to <8>, but was not.",
  "statusTrace" : "self = <test_case.test_season_monitoring.test_season.TestSeason object at 0x108702cd0>\n\n    def test_season_giftbag_group_comparison_false(self):\n        season_round_dict={}\n        for i in self.test_data.get(\"season_round\"):\n            season_round_dict[i.get(\"label\")]=i.get(\"value\")\n        respon = HttpEastBlueApi().web_api_data_report_season_giftbag_group(season_round_dict, [\"2023-01-02 00:00:00\",\"2023-04-05 23:59:59\"])\n        assert_that(respon.get(\"error_code\"), \"error_code\").is_equal_to(\"0\")\n    \n        data = respon.get(\"data\")\n        assert_that(data.get(\"second_query\"), \"data_second_query\").is_none()\n        if data.get(\"first_query\") is not None:\n>           assert_that(len(data.get(\"first_query\")), \"data_second_query_length\").is_less_than_or_equal_to(len(season_round_dict)+1)\nE           AssertionError: [data_second_query_length] Expected <221> to be less than or equal to <8>, but was not.\n\ntest_case/test_season_monitoring/test_season.py:78: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: [data_second_query_length] Expected <221> to be less than or equal to <8>, but was not.",
    "statusTrace" : "self = <test_case.test_season_monitoring.test_season.TestSeason object at 0x108702cd0>\n\n    def test_season_giftbag_group_comparison_false(self):\n        season_round_dict={}\n        for i in self.test_data.get(\"season_round\"):\n            season_round_dict[i.get(\"label\")]=i.get(\"value\")\n        respon = HttpEastBlueApi().web_api_data_report_season_giftbag_group(season_round_dict, [\"2023-01-02 00:00:00\",\"2023-04-05 23:59:59\"])\n        assert_that(respon.get(\"error_code\"), \"error_code\").is_equal_to(\"0\")\n    \n        data = respon.get(\"data\")\n        assert_that(data.get(\"second_query\"), \"data_second_query\").is_none()\n        if data.get(\"first_query\") is not None:\n>           assert_that(len(data.get(\"first_query\")), \"data_second_query_length\").is_less_than_or_equal_to(len(season_round_dict)+1)\nE           AssertionError: [data_second_query_length] Expected <221> to be less than or equal to <8>, but was not.\n\ntest_case/test_season_monitoring/test_season.py:78: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "45e8d9f98080187e",
      "name" : "login",
      "source" : "45e8d9f98080187e.txt",
      "type" : "text/plain",
      "size" : 1857
    }, {
      "uid" : "2f3f0bdeb6e01be4",
      "name" : "[api-path]/web-api/data-report/season-giftbag-group ",
      "source" : "2f3f0bdeb6e01be4.txt",
      "type" : "text/plain",
      "size" : 34564
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test_case.test_season_monitoring"
  }, {
    "name" : "suite",
    "value" : "test_season"
  }, {
    "name" : "subSuite",
    "value" : "TestSeason"
  }, {
    "name" : "host",
    "value" : "enhengdeMacBook-Air.local"
  }, {
    "name" : "thread",
    "value" : "3953-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.test_season_monitoring.test_season"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "491cb45dc6399e81.json",
  "parameterValues" : [ ]
}